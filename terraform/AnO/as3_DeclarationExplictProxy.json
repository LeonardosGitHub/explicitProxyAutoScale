{
  "class": "AS3",
  "action": "deploy",
  "persist": true,
  "declaration": {
    "class": "ADC",
    "schemaVersion": "3.12.0",
    "label": "autoscale_ltm_withExplicitProxy",
    "id": "autoscale_ltm",
    "remark": "autoscale_ltm",
    "Common": {
      "class": "Tenant",
      "Shared": {
        "class": "Application",
        "template": "shared",
        "serviceAddress": {
          "class": "Service_Address",
          "virtualAddress": "0.0.0.0"
        },
        "telemetry_local_rule": {
          "remark": "Only required when TS is a local listener",
          "class": "iRule",
          "iRule": "when CLIENT_ACCEPTED {\n  node 127.0.0.1 6514\n}"
        },
        "telemetry_local": {
          "remark": "Only required when TS is a local listener",
          "class": "Service_TCP",
          "virtualAddresses": [
            "255.255.255.254"
          ],
          "virtualPort": 6514,
          "iRules": [
            "telemetry_local_rule"
          ]
        },
        "telemetry_pool": {
          "class": "Pool",
          "members": [
            {
              "enable": true,
              "serverAddresses": [
                "255.255.255.254"
              ],
              "servicePort": 6514
            }
          ],
          "monitors": [
            {
              "bigip": "/Common/tcp"
            }
          ]
        },
        "telemetry_pool2": {
          "class": "Pool",
          "members": [
            {
              "enable": true,
              "serverAddresses": [
                "255.255.255.254"
              ],
              "servicePort": 6514
            }
          ],
          "monitors": [
            {
              "bigip": "/Common/tcp"
            }
          ]
        },
        "telemetry_hsl": {
          "class": "Log_Destination",
          "type": "remote-high-speed-log",
          "protocol": "tcp",
          "pool": {
            "use": "telemetry_pool"
          }
        },
        "telemetry_publisher": {
          "class": "Log_Publisher",
          "destinations": [
          {
            "use": "telemetry_hsl"
          }
          ]
        }
      }
    },
    "ExplicitProxy" : {
      "class": "Tenant",
      "explicitProxy": {
        "class": "Application",
        "template": "generic",
        "srcipToDatagroup": {
          "class": "Data_Group",
          "keyDataType": "ip",
          "records": [
            {
              "key": "65.60.250.160/32",
              "value": "clientA_hosts_datagroup"
            },
            {
              "key": "20.10.10.0/24",
              "value": "clientB_hosts_datagroup"
            },
            {
              "key": "30.10.10.0/24",
              "value": "clientC_hosts_datagroup"
            }
          ]
        },
        "all_uris": {
          "class": "Data_Group",
          "keyDataType": "string",
          "records": [
            {"key": "/"}
          ]
        },
        "clientA_hosts_datagroup": {
          "class": "Data_Group",
          "keyDataType": "string",
          "records": [
            {
              "key": "www.google.com",
              "value": "clientA_google_allow_uri_list_1"
            },
            {
              "key": "f5.com",
              "value": "all_uris"
            },
            { 
              "key": "chase.com",
              "value": "all_uris"             
            }
          ]
        },
        "clientB_hosts_datagroup": {
          "class": "Data_Group",
          "keyDataType": "string",
          "records": [
            {
              "key": "www.starbucks.com",
              "value": "all_uris"
            },
            {
              "key": "www.target.com",
              "value": "all_uris"
            },
            { 
              "key": "www.spacex.com",
              "value": "all_uris"             
            }
          ]
        },
        "clientA_google_allow_uri_list_1": {
          "class": "Data_Group",
          "keyDataType": "string",
          "records": [
            {"key": "/maps"},
            {"key": "/search"},
            {"key": "/device"}
          ]
        },
        "explicitProxy_irule": {
          "class": "iRule",
          "iRule": {
            "base64": "d2hlbiBDTElFTlRfQUNDRVBURUQgewogICAgc2V0IGhzbHByb3h5IFtIU0w6Om9wZW4gLXByb3RvIFRDUCAtcG9vbCBTaGFyZWQvdGVsZW1ldHJ5X3Bvb2xdCiAgICBzZXQgaHNsX3Byb3h5Y2xpZW50QWNjZXB0ICJsb2dUeXBlPVwicHJveHlMb2dcIixldmVudFRpbWVzdGFtcD1cIltjbG9jayBmb3JtYXQgW2Nsb2NrIHNlY29uZHNdIC1mb3JtYXQgIiVhLCAlZCAlaCAlWSAlVCBHTVQiIC1nbXQgMV1cIixiaWdpcEhvc3RuYW1lPVwiJHN0YXRpYzo6dGNsX3BsYXRmb3JtKG1hY2hpbmUpXCIsY2xpZW50SXA9XCJbSVA6OnJlbW90ZV9hZGRyIGNsaWVudHNpZGVdXCIsY2xpZW50UG9ydD1cIltUQ1A6OmNsaWVudF9wb3J0XVwiLHByb3h5SXA9XCJbSVA6OmxvY2FsX2FkZHIgY2xpZW50c2lkZV1cIixwcm94eVBvcnQ9XCJbVENQOjpsb2NhbF9wb3J0IGNsaWVudHNpZGVdXCIsdmlydHVhbE5hbWU9XCJbdmlydHVhbCBuYW1lXVwiLGJ5dGVzVG9DbGllbnQ9XCJbSVA6OnN0YXRzIGJ5dGVzIG91dF1cIixieXRlc1RvUHJveHk9XCJbSVA6OnN0YXRzIGJ5dGVzIGluXVwiIgogICAgVENQOjpjb2xsZWN0Cn0Kd2hlbiBTRVJWRVJfSU5JVCB7CiAgICBpZiB7W2luZm8gZXhpc3RzIHYyX3NvdXJjZUFkZHJlc3NdfSB7CiAgICAgICAgc2NhbiAkdjJfc291cmNlQWRkcmVzcyB7JWQuJWQuJWQuJWQufSBhIGIgYyBkCiAgICAgICAgVENQOjpvcHRpb24gc2V0IDI4IFtiaW5hcnkgZm9ybWF0IGNjY2NjIHsxfSAkYSAkYiAkYyAkZF0gYWxsCiAgICAgICAgI2xvZyBsb2NhbDAuICJTZXQgb3B0aW9uIDI4OiB2MSB3aXRoIENsaWVudEFkZHI6ICR2Ml9zb3VyY2VBZGRyZXNzIgogICAgfQp9Cgp3aGVuIEhUVFBfUFJPWFlfUkVRVUVTVCB7CiAgICBzZXQgNDAzcmVzcG9uc2UgMAogICAgc2V0IGhzbF9wcm94eWh0dHBQcm94eVJlcSAicG9ydFJlcUJ5Q2xpZW50PVwiW1VSSTo6cG9ydCBbSFRUUDo6dXJpXV1cIixodHRwSG9zdD1cIltIVFRQOjp1cmldXCIsaHR0cE1ldGhvZD1cIltIVFRQOjptZXRob2RdXCIsaHR0cFZlcnNpb249XCJbSFRUUDo6dmVyc2lvbl1cIiIKICAgIGlmIHtbaW5mbyBleGlzdHMgdjJfc291cmNlQWRkcmVzc119IHsKICAgICAgICBzZXQgc3JjRGF0YWdyb3VwIFtjbGFzcyBtYXRjaCAtdmFsdWUgJHYyX3NvdXJjZUFkZHJlc3MgZXF1YWxzIC9FeHBsaWNpdFByb3h5L2V4cGxpY2l0UHJveHkvc3JjaXBUb0RhdGFncm91cF0KICAgICAgICBpZiB7W2NhdGNoICRzcmNEYXRhZ3JvdXBdfSB7CiAgICAgICAgICAgIGlmIHtbZ2V0ZmllbGQgW3N0cmluZyB0b2xvd2VyIFtIVFRQOjpob3N0XV0gIjoiIDJdID09IDQ0MyB9IHsKICAgICAgICAgICAgICAgIGlmIHtbY2xhc3MgbWF0Y2ggW2dldGZpZWxkIFtzdHJpbmcgdG9sb3dlciBbSFRUUDo6aG9zdF1dICI6IiAxXSBlcXVhbHMgL0V4cGxpY2l0UHJveHkvZXhwbGljaXRQcm94eS8kc3JjRGF0YWdyb3VwXX0gewogICAgICAgICAgICAgICAgICAgIHNldCBoc2xfcHJveHl3aGl0ZWxpc3RIb3N0ICJ3aGl0ZWxpc3RIb3N0PVwiQUNDRVBURURcIiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgIHNldCA0MDNyZXNwb25zZSAxCiAgICAgICAgICAgICAgICAgICAgc2V0IGhzbF9wcm94eXdoaXRlbGlzdEhvc3QgIndoaXRlbGlzdEhvc3Q9XCJERU5JRURcIiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIHNldCA0MDNyZXNwb25zZSAxCiAgICAgICAgICAgICAgICAjbG9nIGxvY2FsMC4gIkhvc3QgaGVhZGVyIHBvcnQgd2FzIG5vdCA0NDMsIHJlc3BvbmRpbmcgd2l0aCA0MDMiCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIHNldCA0MDNyZXNwb25zZSAxCiAgICAgICAgICAgICNsb2cgbG9jYWwwLiAiQSBtYXBwaW5nIG9mIHNvdXJjZSBJUCB0byBkYXRhZ3JvdXAgd2FzIG5vdCBmb3VuZCwgcmVzcG9uZGluZyB3aXRoIDQwMyIKICAgICAgICB9CiAgICB9CiAgICBlbHNlIHsKICAgICAgICBzZXQgNDAzcmVzcG9uc2UgMQogICAgICAgICNsb2cgbG9jYWwwLiAiVGhlIFByb3h5IHYyIGlSdWxlIGRpZCBub3QgcHJvZHVjdCBhIHNvdXJjZSBJUCwgdW5hYmxlIHRvIGFsbG93IHRyYWZmaWMsIHJlc3BvbmRpbmcgd2l0aCA0MDMiCiAgICB9CiAgICBpZiB7JDQwM3Jlc3BvbnNlID09IDF9IHsKICAgICAgICBIVFRQOjpjbG9zZQogICAgICAgIEhUVFA6OnJlc3BvbmQgNDAzCiAgICAgICAgc2V0IGhzbF9wcm94eXdoaXRlbGlzdEhvc3QgIndoaXRlbGlzdEhvc3Q9XCJERU5JRURcIiIKICAgIH0KICAgIEhTTDo6c2VuZCAkaHNscHJveHkgIiRoc2xfcHJveHljbGllbnRBY2NlcHQsJGhzbF9wcm94eWh0dHBQcm94eVJlcSwkaHNsX3Byb3h5d2hpdGVsaXN0SG9zdCIKICAgI2xvZyBsb2NhbDAuICIkaHNsX3Byb3h5Y2xpZW50QWNjZXB0LCRoc2xfcHJveHlodHRwUHJveHlSZXEsJGhzbF9wcm94eXdoaXRlbGlzdEhvc3QiCn0="
          }
        },
        "explicitHttps_irule": {
          "class": "iRule",
          "iRule": {
            "base64": "d2hlbiBDTElFTlRfQUNDRVBURUQgewogICAgc2V0IGhzbGh0dHBzIFtIU0w6Om9wZW4gLXByb3RvIFRDUCAtcG9vbCBTaGFyZWQvdGVsZW1ldHJ5X3Bvb2wyXQogICAgc2V0IGhzbF9odHRwc2NsaWVudEFjY2VwdCAibG9nVHlwZT1cImh0dHBzTG9nXCIsZXZlbnRUaW1lc3RhbXA9XCJbY2xvY2sgZm9ybWF0IFtjbG9jayBzZWNvbmRzXSAtZm9ybWF0ICIlYSwgJWQgJWggJVkgJVQgR01UIiAtZ210IDFdXCIsYmlnaXBIb3N0bmFtZT1cIiRzdGF0aWM6OnRjbF9wbGF0Zm9ybShtYWNoaW5lKVwiLGNsaWVudElwPVwiW0lQOjpyZW1vdGVfYWRkciBjbGllbnRzaWRlXVwiLGNsaWVudFBvcnQ9XCJbVENQOjpjbGllbnRfcG9ydF1cIix2aXJ0dWFsTmFtZT1cIlt2aXJ0dWFsIG5hbWVdXCIsYnl0ZXNUb0NsaWVudD1cIltJUDo6c3RhdHMgYnl0ZXMgb3V0XVwiLGJ5dGVzVG9Qcm94eT1cIltJUDo6c3RhdHMgYnl0ZXMgaW5dXCIiCiAgICBzZXQgb3B0MjggW1RDUDo6b3B0aW9uIGdldCAyOF0KICAgIGlmIHtbaW5mbyBleGlzdHMgb3B0MjhdfSB7CiAgICAgICAgYmluYXJ5IHNjYW4gJG9wdDI4IGNIOCB2ZXIgYWRkcgogICAgICAgIHNjYW4gJGFkZHIgIiUyeCUyeCUyeCUyeCIgaXAxIGlwMiBpcDMgaXA0CiAgICAgICAgc2V0IHYyX3NvdXJjZUFkZHJlc3MgIiRpcDEuJGlwMi4kaXAzLiRpcDQiCiAgICAgICAgI2xvZyBsb2NhbDAuICJvcHQyOCBjbGllbnQgYWRkcmVzcyBmcm9tIHByb3h5IHByb3RvY29sOiAkdjJfc291cmNlQWRkcmVzcyIKICAgIH0KfQp3aGVuIENMSUVOVFNTTF9IQU5EU0hBS0UgewogICAgc2V0IGhzbF9odHRwc2NsaWVudHNzbGhhbmRzaGFrZSAic3NsQ2lwaGVyTmFtZT1cIltTU0w6OmNpcGhlciBuYW1lXVwiLHNzbENpcGhlckJpdHM9XCJbU1NMOjpjaXBoZXIgYml0c11cIixzc2xDaXBoZXJWZXJzaW9uPVwiW1NTTDo6Y2lwaGVyIHZlcnNpb25dXCIsc3NsQ2VydFZhbGlkPVwiW1g1MDk6OnZlcmlmeV9jZXJ0X2Vycm9yX3N0cmluZyBbU1NMOjp2ZXJpZnlfcmVzdWx0XV1cIiIKfQp3aGVuIEhUVFBfUkVRVUVTVCB7CiAgICBzZXQgNDAzcmVzcG9uc2UgMAogICAgc2V0IGhzbF9odHRwc2h0dHBSZXF1ZXN0ICJzZXJ2ZXJJUD1cIltJUDo6bG9jYWxfYWRkcl1cIixzZXJ2ZXJQb3J0PVwiW1RDUDo6bG9jYWxfcG9ydF1cIixodHRwTWV0aG9kPVwiW0hUVFA6Om1ldGhvZF1cIixodHRwVmVyc2lvbj1cIltIVFRQOjp2ZXJzaW9uXVwiLGh0dHBVcmk9XCJbSFRUUDo6dXJpXVwiLGh0dHBRdWVyeT1cIltIVFRQOjpxdWVyeV1cIixoZWFkZXJIb3N0PVwiW0hUVFA6Omhvc3RdXCIsaGVhZGVyWGZmPVwiW0hUVFA6OmhlYWRlciBYLWZvcndhcmVkLVhGRl1cIixoZWFkZXJDb250ZW50VHlwZT1cIltIVFRQOjpoZWFkZXIgQ29udGVudC1UeXBlXVwiLGhlYWRlclJlZmVyZXI9XCJbSFRUUDo6aGVhZGVyIFJlZmVyZXJdXCIsaGVhZGVyVXNlckFnZW50PVwiW0hUVFA6OmhlYWRlciBVc2VyLUFnZW50XVwiIgogICAgaWYge1tpbmZvIGV4aXN0cyB2Ml9zb3VyY2VBZGRyZXNzXX0gewogICAgICAgIHNldCBzcmNEYXRhZ3JvdXAgW2NsYXNzIG1hdGNoIC12YWx1ZSAkdjJfc291cmNlQWRkcmVzcyBlcXVhbHMgL0V4cGxpY2l0UHJveHkvZXhwbGljaXRQcm94eS9zcmNpcFRvRGF0YWdyb3VwXQogICAgICAgIGlmIHtbaW5mbyBleGlzdHMgc3JjRGF0YWdyb3VwXX0gewogICAgICAgICAgICBzZXQgZ2V0X3VyaV9kYXRhZ3JvdXAgIFtjbGFzcyBtYXRjaCAtdmFsdWUgW3N0cmluZyB0b2xvd2VyIFtIVFRQOjpob3N0XV0gZXF1YWxzIC9FeHBsaWNpdFByb3h5L2V4cGxpY2l0UHJveHkvJHNyY0RhdGFncm91cF0KICAgICAgICAgICAgaWYge1tpbmZvIGV4aXN0cyBnZXRfdXJpX2RhdGFncm91cF19IHsKICAgICAgICAgICAgICAgIGlmIHtbY2xhc3MgbWF0Y2ggW3N0cmluZyB0b2xvd2VyIFtIVFRQOjpob3N0XV0gZXF1YWxzIC9FeHBsaWNpdFByb3h5L2V4cGxpY2l0UHJveHkvJHNyY0RhdGFncm91cF0gJiYgW2NsYXNzIG1hdGNoIFtzdHJpbmcgdG9sb3dlciBbSFRUUDo6dXJpXV0gc3RhcnRzX3dpdGggL0V4cGxpY2l0UHJveHkvZXhwbGljaXRQcm94eS8kZ2V0X3VyaV9kYXRhZ3JvdXBdfSB7CiAgICAgICAgICAgICAgICAgICAgc2V0IGhzbF9odHRwc3doaXRlbGlzdEhvc3QgIndoaXRlbGlzdEhvc3Q9XCJBQ0NFUFRFRFwiIgogICAgICAgICAgICAgICAgICAgIHNldCBoc2xfaHR0cHN3aGl0ZWxpc3RVUkkgIndoaXRlbGlzdFVSST1cIkFMTE9XRURcIiIKICAgICAgICAgICAgICAgICAgICBIVFRQOjpoZWFkZXIgaW5zZXJ0IFgtUmVhbC1JUCBbSVA6OnJlbW90ZV9hZGRyIGNsaWVudHNpZGVdCiAgICAgICAgICAgICAgICAgICAgSFRUUDo6aGVhZGVyIGluc2VydCBYLUZvcndhcmRlZC1Gb3IgW0lQOjpyZW1vdGVfYWRkciBjbGllbnRzaWRlXQogICAgICAgICAgICAgICAgICAgIEhUVFA6OmhlYWRlciBpbnNlcnQgWC1Gb3J3YXJkZWQtUHJvdG8gaHR0cHMKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICNsb2cgbG9jYWwwLiAiRmFpbGVkIHRvIG1hdGNoIEhvc3Qgd2l0aCBVUkkiCiAgICAgICAgICAgICAgICAgICAgc2V0IDQwM3Jlc3BvbnNlIDEKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICNsb2cgbG9jYWwwLiAiVW5hYmxlIHRvIG1hcCBob3N0bmFtZSBkYXRhZ3JvdXAgdG8gVVJJIGRhdGEgZ3JvdXAiCiAgICAgICAgICAgICAgICBzZXQgNDAzcmVzcG9uc2UgMQogICAgICAgICAgICAgICAgfQogICAgICAgIH0gCiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICNsb2cgbG9jYWwwLiAiVW5hYmxlIHRvIG1hcCBzb3VyY2UgSVAgdG8gaG9zdG5hbWUgZGF0YSBncm91cCBkb2Vzbid0IGV4aXN0IgogICAgICAgICAgICBzZXQgNDAzcmVzcG9uc2UgMQogICAgICAgICAgICB9CiAgICB9IAogICAgZWxzZSB7CiAgICAgICAgI2xvZyBsb2NhbDAuICJVbmFibGUgdG8gc2V0IHZhcmlhYmxlLCB2Ml9zb3VyY2VBZGRyZXNzLiBUQ1Agb3B0aW9uIDI4IGhlYWRlciB3YXMgbWlzc2luZyBvciB1bmFibGUgdG8gZGVjb2RlIgogICAgICAgIHNldCA0MDNyZXNwb25zZSAxCiAgICB9CiAgICBpZiB7JDQwM3Jlc3BvbnNlID09IDF9IHsKICAgICAgICBzZXQgNDAzcmVzcG9uc2UgMQogICAgICAgIHNldCBoc2xfaHR0cHN3aGl0ZWxpc3RIb3N0ICJ3aGl0ZWxpc3RIb3N0PVwiQUNDRVBURURcIiIKICAgICAgICBzZXQgaHNsX2h0dHBzd2hpdGVsaXN0VVJJICJ3aGl0ZWxpc3RVUkk9XCJERU5JRURcIiIKICAgICAgICBzZXQgaHNsX2h0dHBzaHR0cFJlc3BvbnNlICJodHRwU3RhdHVzPVwiNDAzXCIiCiAgICAgICAgSFRUUDo6Y2xvc2UKICAgICAgICBIVFRQOjpyZXNwb25kIDQwMwogICAgICAgIEhTTDo6c2VuZCAkaHNsaHR0cHMgIiRoc2xfaHR0cHNjbGllbnRBY2NlcHQsJGhzbF9odHRwc2NsaWVudHNzbGhhbmRzaGFrZSwkaHNsX2h0dHBzaHR0cFJlcXVlc3QsJGhzbF9odHRwc2h0dHBSZXNwb25zZSwkaHNsX2h0dHBzd2hpdGVsaXN0SG9zdCwkaHNsX2h0dHBzd2hpdGVsaXN0VVJJIgogICAgICAgICNsb2cgbG9jYWwwLiAiJGhzbF9odHRwc2NsaWVudEFjY2VwdCwkaHNsX2h0dHBzY2xpZW50c3NsaGFuZHNoYWtlLCRoc2xfaHR0cHNodHRwUmVxdWVzdCwkaHNsX2h0dHBzaHR0cFJlc3BvbnNlLCRoc2xfaHR0cHN3aGl0ZWxpc3RIb3N0LCRoc2xfaHR0cHN3aGl0ZWxpc3RVUkkiCiAgICB9Cn0Kd2hlbiBIVFRQX1JFU1BPTlNFIHsKICAgIGlmIHskNDAzcmVzcG9uc2UgPT0gMH0gewogICAgICAgIHNldCBoc2xfaHR0cHNodHRwUmVzcG9uc2UgImh0dHBTdGF0dXM9XCJbSFRUUDo6c3RhdHVzXVwiIgogICAgICAgIEhTTDo6c2VuZCAkaHNsaHR0cHMgIiRoc2xfaHR0cHNjbGllbnRBY2NlcHQsJGhzbF9odHRwc2NsaWVudHNzbGhhbmRzaGFrZSwkaHNsX2h0dHBzaHR0cFJlcXVlc3QsJGhzbF9odHRwc2h0dHBSZXNwb25zZSwkaHNsX2h0dHBzd2hpdGVsaXN0SG9zdCwkaHNsX2h0dHBzd2hpdGVsaXN0VVJJIgogICAgICAgICNsb2cgbG9jYWwwLiAiJGhzbF9odHRwc2NsaWVudEFjY2VwdCwkaHNsX2h0dHBzY2xpZW50c3NsaGFuZHNoYWtlLCRoc2xfaHR0cHNodHRwUmVxdWVzdCwkaHNsX2h0dHBzaHR0cFJlc3BvbnNlLCRoc2xfaHR0cHN3aGl0ZWxpc3RIb3N0LCRoc2xfaHR0cHN3aGl0ZWxpc3RVUkkiCiAgICB9CiAgICBlbHNlIHsKICAgICAgICBIVFRQOjpyZXNwb25kIDQwMwogICAgICAgIHNldCBoc2xfaHR0cHNodHRwUmVzcG9uc2UgImh0dHBTdGF0dXM9XCI0MDNcIiIKICAgICAgICBIU0w6OnNlbmQgJGhzbGh0dHBzICIkaHNsX2h0dHBzY2xpZW50QWNjZXB0LCRoc2xfaHR0cHNjbGllbnRzc2xoYW5kc2hha2UsJGhzbF9odHRwc2h0dHBSZXF1ZXN0LCRoc2xfaHR0cHNodHRwUmVzcG9uc2UsJGhzbF9odHRwc3doaXRlbGlzdEhvc3QsJGhzbF9odHRwc3doaXRlbGlzdFVSSSIKICAgICAgICAjbG9nIGxvY2FsMC4gIiRoc2xfaHR0cHNjbGllbnRBY2NlcHQsJGhzbF9odHRwc2NsaWVudHNzbGhhbmRzaGFrZSwkaHNsX2h0dHBzaHR0cFJlcXVlc3QsJGhzbF9odHRwc2h0dHBSZXNwb25zZSwkaHNsX2h0dHBzd2hpdGVsaXN0SG9zdCwkaHNsX2h0dHBzd2hpdGVsaXN0VVJJIgogICAgfQp9"
          }
        },
        "proxyV2_irule": {
          "class": "iRule",
          "iRule": {
            "base64": "I1BST1hZIFByb3RvY29sIFJlY2VpdmVyIGlSdWxlCiMgYy5qZW5pc29uIGF0IGY1LmNvbSAoQ2hhZCBKZW5pc29uKQojIHYyLjAgLSBBZGRlZCBzdXBwb3J0IGZvciBQUk9YWSBQcm90b2NvbCB2MiwgY29udHJvbCBmb3IgdjEsdjIgb3IgbGFjayBvZiBwcm94eSB2aWEgc3RhdGljOjogdmFyaWFibGVzIHNldCBpbiBSVUxFX0lOSVQKIyB2Mi4xIC0gRml4IGZvciBza2lwcGluZyBieXRlcyBpbiB2MiBjb2RlCndoZW4gUlVMRV9JTklUIHsKICAgIHNldCBzdGF0aWM6OmFsbG93UHJveHlWMSAwCiAgICBzZXQgc3RhdGljOjphbGxvd1Byb3h5VjIgMQogICAgc2V0IHN0YXRpYzo6YWxsb3dOb1Byb3h5IDAKfQoKd2hlbiBDTElFTlRfREFUQSB7CiAgICBiaW5hcnkgc2NhbiBbVENQOjpwYXlsb2FkIDEyXSBIKiB2Ml9wcm90b2NvbF9zaWcKICAgIGlmIHskc3RhdGljOjphbGxvd1Byb3h5VjEgJiYgW1RDUDo6cGF5bG9hZCAwIDVdIGVxICJQUk9YWSJ9IHsKICAgICAgICBzZXQgcHJveHlfc3RyaW5nIFtUQ1A6OnBheWxvYWRdCiAgICAgICAgc2V0IHByb3h5X3N0cmluZ19sZW5ndGggW2V4cHIge1tzdHJpbmcgZmlyc3QgIlxyIiBbVENQOjpwYXlsb2FkXV0gKyAyfV0KICAgICAgICBzY2FuICRwcm94eV9zdHJpbmcge1BST1hZIFRDUCVzJXMlcyVzJXN9IHRjcHZlciBzcmNhZGRyIGRzdGFkZHIgc3JjcG9ydCBkc3Rwb3J0CiAgICAgICAgbG9nICJQcm94eSBQcm90b2NvbCB2MSBjb25uIGZyb20gW0lQOjpjbGllbnRfYWRkcl06W1RDUDo6Y2xpZW50X3BvcnRdIGZvciBhbiBJUHYkdGNwdmVyIHN0cmVhbSBmcm9tIFNyYzogJHNyY2FkZHI6JHNyY3BvcnQgdG8gRHN0OiAkZHN0YWRkcjokZHN0cG9ydCIKICAgICAgICBUQ1A6OnBheWxvYWQgcmVwbGFjZSAwICRwcm94eV9zdHJpbmdfbGVuZ3RoICIiCiAgICB9IGVsc2VpZiB7JHN0YXRpYzo6YWxsb3dQcm94eVYyICYmICR2Ml9wcm90b2NvbF9zaWcgZXEgIjBkMGEwZDBhMDAwZDBhNTE1NTQ5NTQwYSJ9ewogICAgICAgIGJpbmFyeSBzY2FuIFtUQ1A6OnBheWxvYWRdIEAxMkgqIHYyX3Byb3h5aGVhZGVycmVtYWluZGVyCiAgICAgICAgYmluYXJ5IHNjYW4gW1RDUDo6cGF5bG9hZF0gQDEySDJIKiB2Ml92ZXJDb21tYW5kIHYyX3JlbWFpbmRlcgogICAgICAgIGlmIHskdjJfdmVyQ29tbWFuZCA9PSAyMX17CiAgICAgICAgICAgIGJpbmFyeSBzY2FuIFtUQ1A6OnBheWxvYWRdIEAxM0gyIHYyX2FkZHJlc3NGYW1pbHlUcmFuc3BvcnRQcm90b2NvbAogICAgICAgICAgICBpZiB7JHYyX2FkZHJlc3NGYW1pbHlUcmFuc3BvcnRQcm90b2NvbCA9PSAxMX0gewogICAgICAgICAgICAgICAgYmluYXJ5IHNjYW4gW1RDUDo6cGF5bG9hZF0gQDE2Y2NjY2NjY2NTUyB2Ml9zb3VyY2VBZGRyZXNzMSB2Ml9zb3VyY2VBZGRyZXNzMiB2Ml9zb3VyY2VBZGRyZXNzMyB2Ml9zb3VyY2VBZGRyZXNzNCB2Ml9kZXN0QWRkcmVzczEgdjJfZGVzdEFkZHJlc3MyIHYyX2Rlc3RBZGRyZXNzMyB2Ml9kZXN0QWRkcmVzczQgdjJfc291cmNlUG9ydDEgdjJfZGVzdFBvcnQxCiAgICAgICAgICAgICAgICBzZXQgdjJfc291cmNlQWRkcmVzcyAiW2V4cHIgeyR2Ml9zb3VyY2VBZGRyZXNzMSAmIDB4ZmZ9XS5bZXhwciB7JHYyX3NvdXJjZUFkZHJlc3MyICYgMHhmZn1dLltleHByIHskdjJfc291cmNlQWRkcmVzczMgJiAweGZmfV0uW2V4cHIgeyR2Ml9zb3VyY2VBZGRyZXNzNCAmIDB4ZmZ9XSIKICAgICAgICAgICAgICAgIHNldCB2Ml9kZXN0QWRkcmVzcyAiW2V4cHIgeyR2Ml9kZXN0QWRkcmVzczEgJiAweGZmfV0uW2V4cHIgeyR2Ml9kZXN0QWRkcmVzczIgJiAweGZmfV0uW2V4cHIgeyR2Ml9kZXN0QWRkcmVzczMgJiAweGZmfV0uW2V4cHIgeyR2Ml9kZXN0QWRkcmVzczQgJiAweGZmfV0iCiAgICAgICAgICAgICAgICBzZXQgdjJfc291cmNlUG9ydCBbZXhwciB7JHYyX3NvdXJjZVBvcnQxICYgMHhmZmZmfV0KICAgICAgICAgICAgICAgIHNldCB2Ml9kZXN0UG9ydCBbZXhwciB7JHYyX2Rlc3RQb3J0MSAmIDB4ZmZmZn1dCiAgICAgICAgICAgICAgICBsb2cgIlByb3h5IFByb3RvY29sIHYyIGNvbm4gZnJvbSBbSVA6OmNsaWVudF9hZGRyXTpbVENQOjpjbGllbnRfcG9ydF0gZm9yIGFuIElQdjQgU3RyZWFtIGZyb20gU3JjOiAkdjJfc291cmNlQWRkcmVzczokdjJfc291cmNlUG9ydCB0byBEc3Q6ICR2Ml9kZXN0QWRkcmVzczokdjJfZGVzdFBvcnQiCiAgICAJCQliaW5hcnkgc2NhbiBbVENQOjpwYXlsb2FkXSBAMTRTIGFkZHJlc3Nfc2l6ZQogICAgCQkJc2V0IHNraXBfYnl0ZXMgW2V4cHIgMTYgKyAkYWRkcmVzc19zaXplXQogICAgICAgICAgICAgICAgVENQOjpwYXlsb2FkIHJlcGxhY2UgMCAkc2tpcF9ieXRlcyAiIgogICAgICAgICAgICB9IGVsc2VpZiB7JHYyX2FkZHJlc3NGYW1pbHlUcmFuc3BvcnRQcm90b2NvbCA9PSAyMX0gewogICAgICAgICAgICAgICAgYmluYXJ5IHNjYW4gW1RDUDo6cGF5bG9hZF0gQDE2SDRINEg0SDRINEg0SDRINCB2Ml92NnNvdXJjZUFkZHJlc3MxIHYyX3Y2c291cmNlQWRkcmVzczIgdjJfdjZzb3VyY2VBZGRyZXNzMyB2Ml92NnNvdXJjZUFkZHJlc3M0IHYyX3Y2c291cmNlQWRkcmVzczUgdjJfdjZzb3VyY2VBZGRyZXNzNiB2Ml92NnNvdXJjZUFkZHJlc3M3IHYyX3Y2c291cmNlQWRkcmVzczgKICAgICAgICAgICAgICAgIGJpbmFyeSBzY2FuIFtUQ1A6OnBheWxvYWRdIEAzMkg0SDRINEg0SDRINEg0SDQgdjJfdjZkZXN0QWRkcmVzczEgdjJfdjZkZXN0QWRkcmVzczIgdjJfdjZkZXN0QWRkcmVzczMgdjJfdjZkZXN0QWRkcmVzczQgdjJfdjZkZXN0QWRkcmVzczUgdjJfdjZkZXN0QWRkcmVzczYgdjJfdjZkZXN0QWRkcmVzczcgdjJfdjZkZXN0QWRkcmVzczgKICAgICAgICAgICAgICAgIGJpbmFyeSBzY2FuIFtUQ1A6OnBheWxvYWRdIEA0OFNTIHYyX3Y2c291cmNlUG9ydDEgdjJfdjZkZXN0UG9ydDEKICAgICAgICAgICAgICAgIHNldCB2Ml92NnNvdXJjZVBvcnQgW2V4cHIgeyR2Ml92NnNvdXJjZVBvcnQxICYgMHhmZmZmfV0KICAgICAgICAgICAgICAgIHNldCB2Ml92NmRlc3RQb3J0IFtleHByIHskdjJfdjZkZXN0UG9ydDEgJiAweGZmZmZ9XQogICAgICAgICAgICAgICAgc2V0IHYyX3Y2c291cmNlQWRkcmVzcyAiJHYyX3Y2c291cmNlQWRkcmVzczE6JHYyX3Y2c291cmNlQWRkcmVzczI6JHYyX3Y2c291cmNlQWRkcmVzczM6JHYyX3Y2c291cmNlQWRkcmVzczQ6JHYyX3Y2c291cmNlQWRkcmVzczU6JHYyX3Y2c291cmNlQWRkcmVzczY6JHYyX3Y2c291cmNlQWRkcmVzczc6JHYyX3Y2c291cmNlQWRkcmVzczgiCiAgICAgICAgICAgICAgICBzZXQgdjJfdjZkZXN0QWRkcmVzcyAiJHYyX3Y2ZGVzdEFkZHJlc3MxOiR2Ml92NmRlc3RBZGRyZXNzMjokdjJfdjZkZXN0QWRkcmVzczM6JHYyX3Y2ZGVzdEFkZHJlc3M0OiR2Ml92NmRlc3RBZGRyZXNzNTokdjJfdjZkZXN0QWRkcmVzczY6JHYyX3Y2ZGVzdEFkZHJlc3M3OiR2Ml92NmRlc3RBZGRyZXNzOCIKICAgICAgICAgICAgICAgIGxvZyAiUHJveHkgUHJvdG9jb2wgdjIgY29ubiBmcm9tIGZyb20gW0lQOjpjbGllbnRfYWRkcl06W1RDUDo6Y2xpZW50X3BvcnRdIGZvciBhbiBJUHY2IFN0cmVhbSBmcm9tIFNyYzogJHYyX3Y2c291cmNlQWRkcmVzczokdjJfdjZzb3VyY2VQb3J0IHRvIERzdDogJHYyX3Y2ZGVzdEFkZHJlc3M6JHYyX3Y2ZGVzdFBvcnQiCiAgICAJCQliaW5hcnkgc2NhbiBbVENQOjpwYXlsb2FkXSBAMTRTIGFkZHJlc3Nfc2l6ZQogICAgCQkJc2V0IHNraXBfYnl0ZXMgW2V4cHIgMTYgKyAkYWRkcmVzc19zaXplXQogICAgICAgICAgICAgICAgVENQOjpwYXlsb2FkIHJlcGxhY2UgMCAkc2tpcF9ieXRlcyAiIgogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgbG9nICJ2Ml9wcm94eSBjb25uIGZyb20gW0lQOjpjbGllbnRfYWRkcl06W1RDUDo6Y2xpZW50X3BvcnRdIC0gcG9zc2libGUgdW5rbm93bi9tYWxmb3JtZWQgdHJhbnNwb3J0UHJvdG9jb2wgb3IgYWRkcmVzc0ZhbWlseSIKICAgICAgICAgICAgICAgIHJlamVjdAogICAgICAgICAgICB9CiAgICAgICAgfSBlbHNlaWYgeyR2Ml92ZXJDb21tYW5kID09IDIwfXsKICAgICAgICAgICAgI2xvZyAiUHJveHkgUHJvdG9jb2wgdjIgYW5kIExPQ0FMIGNvbW1hbmQgZnJvbSBbSVA6OmNsaWVudF9hZGRyXTpbVENQOjpjbGllbnRfcG9ydF07IHNraXBwaW5nIgoJCQliaW5hcnkgc2NhbiBbVENQOjpwYXlsb2FkXSBAMTRTIGFkZHJlc3Nfc2l6ZQoJCQlzZXQgc2tpcF9ieXRlcyBbZXhwciAxNiArICRhZGRyZXNzX3NpemVdCiAgICAgICAgICAgIFRDUDo6cGF5bG9hZCByZXBsYWNlIDAgJHNraXBfYnl0ZXMgIiIKICAgICAgICAgICAgYmluYXJ5IHNjYW4gW1RDUDo6cGF5bG9hZF0gSCogbG9jYWxfcmVtYWluZGVyCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbG9nICJQcm94eSBQcm90b2NvbCBQcm90b2NvbCBTaWduYXR1cmUgRGV0ZWN0ZWQgZnJvbSBbSVA6OmNsaWVudF9hZGRyXTpbVENQOjpjbGllbnRfcG9ydF0gYnV0IHByb3RvY29sIHZlcnNpb24gYW5kIGNvbW1hbmQgbm90IGxlZ2FsOyBjb25uZWN0aW9uIHJlc2V0IgogICAgICAgICAgICByZWplY3QKICAgICAgICB9CiAgICB9IGVsc2VpZiB7JHN0YXRpYzo6YWxsb3dOb1Byb3h5fSB7CiAgICAgICAgbG9nICJDb25uZWN0aW9uIGZyb20gW0lQOjpjbGllbnRfYWRkcl06W1RDUDo6Y2xpZW50X3BvcnRdIGFsbG93ZWQgZGVzcGl0ZSBsYWNrIG9mIFBST1hZIHByb3RvY29sIGhlYWRlciIKICAgIH0gZWxzZSB7CiAgICAgICAgcmVqZWN0CiAgICAgICAgbG9nICJDb25uZWN0aW9uIHJlamVjdGVkIGZyb20gW0lQOjpjbGllbnRfYWRkcl06W1RDUDo6Y2xpZW50X3BvcnRdIGR1ZSB0byBsYWNrIG9mIFBST1hZIHByb3RvY29sIGhlYWRlciIKICAgIH0KICAgIFRDUDo6cmVsZWFzZQp9"
          }
        },        
        "explicitProxyhttp_profile": {
          "class": "HTTP_Profile",
          "proxyType": "explicit",
          "requestChunking": "rechunk",
          "responseChunking": "rechunk",
          "resolver": {"bigip": "/Common/explicitProxy_resolver"},
          "tunnelName": "/Common/explicitProxy_tunnel"
        },
        "explicitProxyVS": {
          "class": "Service_HTTP",
          "layer4": "tcp",
          "profileTCP": {
            "bigip": "/Common/tcpOpt28"
          },
          "virtualAddresses": [
            {
              "use": "/Common/Shared/serviceAddress"
            }
          ],
          "persistenceMethods": [],
          "virtualPort": 10443,
          "profileHTTP": {"use": "explicitProxyhttp_profile"},
          "snat": "auto",
          "allowVlans": [{"bigip":"/Common/internal"}],
          "iRules": ["proxyV2_irule","explicitProxy_irule"]
        },
        "explicitProxy_HTTPS_VS": {
          "class": "Service_HTTPS",
          "layer4": "tcp",
          "profileTCP": {
            "bigip": "/Common/tcpOpt28"
          },
          "redirect80": false,
          "virtualAddresses": [
            {
              "use": "/Common/Shared/serviceAddress"
            }
          ],
          "persistenceMethods": [],
          "translateServerPort": false,
          "translateServerAddress": false,
          "virtualPort": 443,
          "profileHTTP": {"bigip": "/Common/http"},
          "snat": "auto",
          "allowVlans": [{"bigip":"/Common/explicitProxy_tunnel"}],
          "clientTLS": {"bigip": "/Common/clientTLS_SSL_FORWARD_PROXY"},
          "serverTLS": {"bigip": "/Common/serverTLS_SSL_FORWARD_PROXY"},
          "iRules": ["explicitHttps_irule"]
        }
      }
    }
  }
}
