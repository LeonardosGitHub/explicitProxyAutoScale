when CLIENT_ACCEPTED {
    set hsl [HSL::open -proto TCP -pool Shared/telemetry_pool]
    set hsl_clientAccept "logType=\"httpsLog\",eventTimestamp=\"[clock seconds]\",bigipHostname=\"$static::tcl_platform(machine)\",clientIp=\"[IP::remote_addr clientside]\",clientPort=\"[TCP::client_port]\",proxyIp=\"[IP::local_addr clientside]\",proxyPort=\"[TCP::local_port clientside]\",virtualName=\"[virtual name]\",bytesToClient=\"[IP::stats bytes out]\",bytesToProxy=\"[IP::stats bytes in]\""
}
when SERVERSSL_SERVERCERT {
    set hsl_serversslServercert "sslCipherName=\"[SSL::cipher name]\",sslCipherBits=\"[SSL::cipher bits]\",sslCipherVersion=\"[SSL::cipher version]\",sslCertValid=\"[X509::verify_cert_error_string [SSL::verify_result]]\""
}
when HTTP_REQUEST {
    set hsl_httpRequest "serverIP=\"[IP::local_addr]\",serverPort=\"[TCP::local_port]\",httpMethod=\"[HTTP::method]\",httpVersion=\"[HTTP::version]\",httpUri=\"[HTTP::uri]\",httpQuery=\"[HTTP::query]\",headerHost=\"[HTTP::host]\",headerXff=\"[HTTP::header X-forwared-XFF]\",headerContentType=\"[HTTP::header Content-Type]\",headerReferer=\"[HTTP::header Referer]\",headerUserAgent=\"[HTTP::header User-Agent]\""
}
when HTTP_RESPONSE {
    set hsl_httpResponse "httpStatus=\"[HTTP::status]\""
    HSL::send $hsl "$hsl_clientAccept,$hsl_serversslServercert,$hsl_httpRequest,$hsl_httpResponse"
}
